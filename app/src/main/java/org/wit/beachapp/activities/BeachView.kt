package org.wit.beachapp.activities

import android.app.Activity
import android.content.Intent
import android.net.Uri
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import com.google.android.material.snackbar.Snackbar
import org.wit.beachapp.main.MainApp
import org.wit.beachapp.models.BeachModel
import org.wit.beachapp.R
import android.view.Menu
import android.view.MenuItem
import android.view.View
import android.widget.*
import androidx.activity.result.ActivityResultLauncher
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatDelegate
import androidx.lifecycle.MutableLiveData
import androidx.recyclerview.widget.LinearLayoutManager
import com.squareup.picasso.Picasso
import org.wit.beachapp.databinding.ActivityBeachBinding
import org.wit.beachapp.databinding.ActivityViewBinding
import org.wit.beachapp.helpers.showImagePicker
import org.wit.beachapp.models.Location
import timber.log.Timber.i

class BeachView : AppCompatActivity(){
    //Using autogenerated class to access view objects of the layout.
    private lateinit var binding: ActivityViewBinding
    //Creating a beach as a class member of BeachModel()
    var beach = BeachModel()
    //Retrieving and storing reference to MainApp object where Beach list is.
    lateinit var app: MainApp
    //Launch map activity
    private lateinit var mapIntentLauncher : ActivityResultLauncher<Intent>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //Inflate layout
        binding = ActivityViewBinding.inflate(layoutInflater)
        setContentView(binding.root)
        app = application as MainApp

        //Retrieves selected beach.
        if (intent.hasExtra("beach_edit")) {
            beach = intent.extras?.getParcelable("beach_edit")!!
            //Binding correct text to UI
            binding.beachTitle.setText(beach.title)
            binding.description.setText(beach.description)
            binding.size.setText(beach.size)
            binding.walk.text = beach.walk
            binding.visited.text = beach.visited
            binding.dogs.text = beach.dogs
            binding.fishing.text = beach.fishing
            //Display image
            Picasso.get()
                .load(beach.image)
                .into(binding.currentImage)
        }
        registerMapCallback()
}

    private fun registerMapCallback() {
        mapIntentLauncher =
            registerForActivityResult(ActivityResultContracts.StartActivityForResult())
            { result ->
                when (result.resultCode) {
                    RESULT_OK -> {
                        if (result.data != null) {
                            i("Got Location ${result.data.toString()}")
                            val location = result.data!!.extras?.getParcelable<Location>("location")!!
                            i("Location == $location")
                            beach.lat = location.lat
                            beach.lng = location.lng
                            beach.zoom = location.zoom
                        } // end of if
                    }
                    RESULT_CANCELED -> { } else -> { }
                }
            }
    }

}

