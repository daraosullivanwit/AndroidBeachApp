package org.wit.beachapp.activities

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.LayoutInflater
import android.view.Menu
import android.view.MenuItem
import android.view.ViewGroup
import androidx.activity.result.ActivityResultLauncher
import androidx.activity.result.contract.ActivityResultContracts
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import org.wit.beachapp.R
import org.wit.beachapp.adapters.BeachAdapter
import org.wit.beachapp.adapters.BeachListener
import org.wit.beachapp.databinding.ActivityBeachListBinding
import org.wit.beachapp.databinding.ActivityVisitedBinding
import org.wit.beachapp.databinding.CardBeachBinding
import org.wit.beachapp.main.MainApp
import org.wit.beachapp.models.BeachModel
import timber.log.Timber

class VisitedActivity : AppCompatActivity(), BeachListener{
    lateinit var app: MainApp
    //Using autogenerated class to access view objects of the layout.
    private lateinit var binding: ActivityVisitedBinding
    private lateinit var refreshIntentLauncher : ActivityResultLauncher<Intent>


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //Inflate layout
        binding = ActivityVisitedBinding.inflate(layoutInflater)
        setContentView(binding.root)
        setSupportActionBar(binding.toolbar)
        app = application as MainApp
        val layoutManager = LinearLayoutManager(this)
        //Binding to view
        binding.recyclerView.layoutManager = layoutManager
        //binding.recyclerView.adapter = BeachAdapter(app.beaches.findAll(),this)
        loadBeaches()
        registerRefreshCallback()
    }

    //Load menu resource.
    override fun onCreateOptionsMenu(menu: Menu): Boolean {
        menuInflater.inflate(R.menu.menu_visited, menu)
        return super.onCreateOptionsMenu(menu)
    }

    //Back to homepage
    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        when (item.itemId) {
            R.id.item_back -> {
                val launcherIntent = Intent(this, BeachListActivity::class.java)
                refreshIntentLauncher.launch(launcherIntent)
            }
        }
        return super.onOptionsItemSelected(item)
    }

    //Implements BeachListener interface.
    override fun onBeachClick(beach: BeachModel) {
   //     val launcherIntent = Intent(this, BeachActivity::class.java)
        //Pass selected beach to the activity.
     //   launcherIntent.putExtra("beach_edit", beach)
     //refreshIntentLauncher.launch(launcherIntent)
    }

    private fun registerRefreshCallback() {
        refreshIntentLauncher =
            registerForActivityResult(ActivityResultContracts.StartActivityForResult())
            { loadBeaches() }
    }

    private fun loadBeaches() {
        val visited = app.beaches.findAll().filter { it.visited == "Visited" }
        showBeaches(visited)
        }

    fun showBeaches (beaches: List<BeachModel>) {
        binding.recyclerView.adapter = BeachAdapter(beaches, this)
        binding.recyclerView.adapter?.notifyDataSetChanged()
    }
}